ext {

    //Version
    kinCoreVersion = '95645e1c17'
    constraintLayoutVersion = '1.1.3'
    supportVersion = '26.1.0'
    picassoVersion = '2.71828'
    okhttp3Version = '3.9.1'
    gsonVersion = '2.8.2'
    hamcrestVersion = '1.3'
    zxingVersion = '3.3.3'
    kinMigrationVersion = '1.0.9'
    kotlinVersion = kotlin_version

    //Packages
    kinFoundationPackage = 'com.github.kinfoundation'
    kinEcosystemPackage = 'com.github.kinecosystem'
    supportPackage = 'com.android.support'
    constraintLayoutPackage = 'com.android.support.constraint'
    picassoPackage = 'com.squareup.picasso'
    okhttp3Packace = 'com.squareup.okhttp3'
    gsonPackage = 'com.google.code.gson'
    zxingPackage = 'com.google.zxing'
    kotlinPackage = 'org.jetbrains.kotlin'

    //Testing Version
    junitVersion = '4.12'
    mockitoVersion = '2.13.0'
    robolectricVersion = '4.3'
    mokitoKotlinVersion = '2.1.0'
    mockitoAndroidVersion = '2.10.0'
    androidTestVersion = '1.0.1'

    //Testing Packages
    junitPackage = 'junit'
    mockitoPackage = 'org.mockito'
    robolectricPackage = 'org.robolectric'
    mokitoKotlinPackage = 'com.nhaarman.mockitokotlin2'
    androidTestPackage = 'com.android.support.test'
    hamcrestPackage = 'org.hamcrest'


    devDependencies = [
            kinMigration      : buildDependency(kinEcosystemPackage, 'kin-migration-module-android', kinMigrationVersion),
            appCompat_v7      : buildDependency(supportPackage, 'appcompat-v7', supportVersion),
            recyclerView_v7   : buildDependency(supportPackage, 'recyclerview-v7', supportVersion),
            constraintLayout  : buildDependency(constraintLayoutPackage, 'constraint-layout', constraintLayoutVersion),
            picasso           : buildDependency(picassoPackage, 'picasso', picassoVersion),
            gson              : buildDependency(gsonPackage, 'gson', gsonVersion),
            okhttp3           : buildDependency(okhttp3Packace, 'okhttp', okhttp3Version),
            loginInterceptor3 : buildDependency(okhttp3Packace, 'logging-interceptor', okhttp3Version),
            supportAnnotations: buildDependency(supportPackage, 'support-annotations', supportVersion),
            zxing_qr: buildDependency(zxingPackage, 'core', zxingVersion),
            kotlin      : buildDependency(kotlinPackage, 'kotlin-stdlib-jdk7', kotlinVersion),
    ]

    testingDependencies = [
            junit            : buildDependency(junitPackage, 'junit', junitVersion),
            mockito          : buildDependency(mockitoPackage, 'mockito-core', mockitoVersion),
            robolectric      : buildDependency(robolectricPackage, 'robolectric', robolectricVersion),
            mockitoKotlin    : buildDependency(mokitoKotlinPackage, 'mockito-kotlin', mokitoKotlinVersion),
            mockitoAndroid   : buildDependency(mockitoPackage, 'mockito-android', mockitoAndroidVersion),
            androidTestRunner: buildDependency(androidTestPackage, 'runner', androidTestVersion),
            hamcrest         : buildDependency(hamcrestPackage, 'hamcrest-library', hamcrestVersion)
    ]
}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}