package com.kin.ecosystem.network.model;/*
 * Kin Ecosystem
 * Apis for client to server interaction
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * OrderSpendResult
 */
@JsonAdapter(OrderSpendResult.Adapter.class)
public class OrderSpendResult {

    /**
     * Gets or Sets type
     */
    @JsonAdapter(TypeEnum.Adapter.class)
    public enum TypeEnum {

        COUPON("coupon"),
        PAYMENT_CONFIRMATION("payment_confirmation");

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<TypeEnum> {

            @Override
            public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TypeEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("type")
    protected TypeEnum type = null;

    public OrderSpendResult type(TypeEnum type) {
        this.type = type;
        return this;
    }


    /**
     * Get type
     *
     * @return type
     **/
    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderSpendResult orderSpendResult = (OrderSpendResult) o;
        return this.type.equals(orderSpendResult.type);
    }

    @Override
    public int hashCode() {
        return type.hashCode();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderSpendResult {\n");

        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static class Adapter extends TypeAdapter<OrderSpendResult> {

        private OrderSpendResult result;

        @Override
        public void write(JsonWriter out, OrderSpendResult spendResult) throws IOException {
            out.beginObject();
            out.name("type").value(spendResult.getType().getValue());
            if(spendResult instanceof CouponCodeResult) {
                out.name("coupon_code").value(((CouponCodeResult) spendResult).getCode());
            }
            if(spendResult instanceof JWTBodyPaymentConfirmationResult) {
                out.name("jwt").value(((JWTBodyPaymentConfirmationResult) spendResult).getJwt());
            }
            out.endObject();
        }

        @Override
        public OrderSpendResult read(JsonReader in) throws IOException {

            in.beginObject();
            while (in.hasNext()) {
                switch (in.nextName()) {
                    case "type":
                        TypeEnum typeEnum = TypeEnum.fromValue(in.nextString());
                        if (typeEnum != null) {
                            switch (typeEnum) {
                                case COUPON:
                                    result = new CouponCodeResult();
                                    break;
                                case PAYMENT_CONFIRMATION:
                                    result = new JWTBodyPaymentConfirmationResult();
                                    break;
                            }
                        }
                        result.setType(typeEnum);
                        break;
                    case "coupon_code":
                        ((CouponCodeResult) result).setCode(in.nextString());
                        break;
                    case "jwt":
                        ((JWTBodyPaymentConfirmationResult)result).setJwt(in.nextString());
                        break;
                }
            }
            in.endObject();

            return result;
        }
    }

}